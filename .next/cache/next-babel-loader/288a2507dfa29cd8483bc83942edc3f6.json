{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/chandu0101/Desktop/kode/programming/typescript_projects/learn-nextjs/portfolio-chandu0101/src/pages/portfolios.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport BaseLayout from \"../components/layouts/BaseLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\n\nvar Portfolios = function Portfolios(_ref) {\n  var userData = _ref.userData;\n  return __jsx(BaseLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Portfolio Page\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, userData.map(function (post) {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"portfolio/[id]\",\n      as: \"portfolio/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, post.title)));\n  })));\n};\n\nPortfolios.getInitialProps = function _callee() {\n  var userData, res, posts;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts\"));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          posts = _context.sent;\n          userData = posts;\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Error getting posts : ,\", _context.t0);\n\n        case 13:\n          return _context.abrupt(\"return\", {\n            userData: userData\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]]);\n};\n\nexport default Portfolios;","map":{"version":3,"sources":["/Users/chandu0101/Desktop/kode/programming/typescript_projects/learn-nextjs/portfolio-chandu0101/src/pages/portfolios.tsx"],"names":["BaseLayout","fetch","Link","Portfolios","userData","map","post","id","title","getInitialProps","res","json","posts","console","log"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAKA,IAAMC,UAA0C,GAAG,SAA7CA,UAA6C,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACjE,SACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,QAAQ,CAACC,GAAT,CAAa,UAAAC,IAAI,EAAI;AAClB,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,gBAAX;AAA4B,MAAA,EAAE,sBAAeA,IAAI,CAACC,EAApB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADJ,CADI,CAAR;AAMH,GAPA,CADL,CAFJ,CADJ;AAeH,CAhBD;;AAkBAL,UAAU,CAACM,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIHR,KAAK,CAAC,4CAAD,CAJF;;AAAA;AAIfS,UAAAA,GAJe;AAAA;AAAA,2CAKDA,GAAG,CAACC,IAAJ,EALC;;AAAA;AAKfC,UAAAA,KALe;AAMrBR,UAAAA,QAAQ,GAAGQ,KAAX;AANqB;AAAA;;AAAA;AAAA;AAAA;AAQrBC,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AARqB;AAAA,2CAUlB;AAAEV,YAAAA,QAAQ,EAARA;AAAF,WAVkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAaA,eAAeD,UAAf","sourcesContent":["import BaseLayout from \"../components/layouts/BaseLayout\";\nimport { NextPage } from \"next\";\nimport fetch from \"isomorphic-unfetch\"\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\"\n\ntype Post = { userId: number, id: number, title: string, body: string }\n\nconst Portfolios: NextPage<{ userData: Post[] }> = ({ userData }) => {\n    return (\n        <BaseLayout>\n            <h1>Portfolio Page</h1>\n            <ul>\n                {userData.map(post => {\n                    return (<li>\n                        <Link href=\"portfolio/[id]\" as={`portfolio/${post.id}`}>\n                            <a>{post.title}</a>\n                        </Link>\n\n                    </li>)\n                })}\n            </ul>\n        </BaseLayout>\n    )\n}\n\nPortfolios.getInitialProps = async () => {\n\n    let userData;\n    try {\n        const res = await fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        const posts = await res.json()\n        userData = posts\n    } catch (error) {\n        console.log(\"Error getting posts : ,\", error);\n    }\n    return { userData }\n}\n\nexport default Portfolios;\n"]},"metadata":{},"sourceType":"module"}