{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/chandu0101/Desktop/kode/programming/typescript_projects/learn-nextjs/portfolio-chandu0101/src/pages/portfolio/[id].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { useRouter } from \"next/router\";\n\nvar Portfolio = function Portfolio(_ref) {\n  var post = _ref.post;\n  var router = useRouter();\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"I am portfolio page\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, post.title), post.body, post.id));\n};\n\nPortfolio.getInitialProps = function _callee(_ref2) {\n  var req, post, a, id, res;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref2.req;\n          // const id = req.\n          a = req.url.split(\"/\");\n          id = a[a.length - 1];\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"https://jsonplaceholder.typicode.com/posts/\".concat(id)));\n\n        case 6:\n          res = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 9:\n          post = _context.sent;\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](3);\n          console.log(\"Error Getting Posts\");\n\n        case 15:\n          return _context.abrupt(\"return\", {\n            post: post\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 12]]);\n};\n\nexport default Portfolio;","map":{"version":3,"sources":["/Users/chandu0101/Desktop/kode/programming/typescript_projects/learn-nextjs/portfolio-chandu0101/src/pages/portfolio/[id].tsx"],"names":["fetch","useRouter","Portfolio","post","router","title","body","id","getInitialProps","req","a","url","split","length","res","json","console","log"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAIA,IAAMC,SAAmC,GAAG,SAAtCA,SAAsC,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACtD,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,SAAQ,4BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADI,EAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,IAAI,CAACE,KAAV,CADJ,EAGKF,IAAI,CAACG,IAHV,EAIKH,IAAI,CAACI,EAJV,CAFI,CAAR;AASH,CAZD;;AAcAL,SAAS,CAACM,eAAV,GAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AAExB;AACMC,UAAAA,CAHkB,GAGdD,GAAG,CAACE,GAAJ,CAAQC,KAAR,CAAc,GAAd,CAHc;AAIlBL,UAAAA,EAJkB,GAIbG,CAAC,CAACA,CAAC,CAACG,MAAF,GAAW,CAAZ,CAJY;AAAA;AAAA;AAAA,2CAMFb,KAAK,sDAA+CO,EAA/C,EANH;;AAAA;AAMdO,UAAAA,GANc;AAAA;AAAA,2CAOPA,GAAG,CAACC,IAAJ,EAPO;;AAAA;AAOpBZ,UAAAA,IAPoB;AAAA;AAAA;;AAAA;AAAA;AAAA;AASpBa,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAToB;AAAA,2CAWjB;AAAEd,YAAAA,IAAI,EAAJA;AAAF,WAXiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAcA,eAAeD,SAAf","sourcesContent":["\nimport fetch from \"isomorphic-unfetch\"\nimport { useRouter } from \"next/router\"\nimport { NextPage } from \"next\"\nimport { Post } from \"../types\"\n\nconst Portfolio: NextPage<{ post: Post }> = ({ post }) => {\n    const router = useRouter()\n\n    return (<>\n        <h3>I am portfolio page</h3>\n        <div>\n            <h3>{post.title}</h3>\n\n            {post.body}\n            {post.id}\n        </div>\n    </>)\n}\n\nPortfolio.getInitialProps = async ({ req }) => {\n    let post: Post\n    // const id = req.\n    const a = req.url.split(\"/\");\n    const id = a[a.length - 1]\n    try {\n        const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\n        post = await res.json()\n    } catch (error) {\n        console.log(\"Error Getting Posts\");\n    }\n    return { post }\n}\n\nexport default Portfolio\n\n"]},"metadata":{},"sourceType":"module"}